{"version":3,"sources":["features/appSlice.js","firebase.js","features/userSlice.js","SidebarChannel.js","Sidebar.js","ChatHeader.js","Message.js","Chat.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["appSlice","createSlice","name","initialState","channelId","channelName","reducers","setChannelInfo","state","action","payload","actions","selectChannelId","app","selectChannelName","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","userSlice","user","login","logout","selectUser","SidebarChannel","id","admin","userID","useSelector","dispatch","useDispatch","className","onClick","displayName","collection","doc","delete","Sidebar","useState","channels","setChannels","toggle","setToggle","voice","voiceToggle","useEffect","onSnapshot","snapshot","docs","map","channel","data","document","getElementsByClassName","style","visibility","prompt","add","userAdmin","fontSize","Avatar","src","photo","signOut","uid","substring","ChatHeader","placeholder","Message","key_id","channel_id","timestamp","message","img","Date","toDate","toUTCString","alt","Chat","messagesEnd","React","createRef","input","setInput","imgtoggle","setImgtoggle","giftoggle","setgiftoggle","messages","setMessages","scrollToBottom","scrollIntoView","behavior","orderBy","imgHandle","i","lm","parseInt","length","float","clear","padding","ref","el","onSelect","item","e","FieldValue","serverTimestamp","images","fixed_height","url","masonryConfig","columns","imageWidth","gutter","mq","value","disabled","onChange","target","preventDefault","type","cursor","Login","Button","signInWithPopup","catch","error","alert","App","onAuthStateChanged","authUser","photoURL","email","store","configureStore","reducer","userReducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.241e7e63.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    channelId: null,\n    channelName: null,\n  },\n  reducers: {\n    setChannelInfo: (state,action) => {\n     state.channelId = action.payload.channelId;\n     state.channelName = action.payload.channelName;\n    },\n  },\n});\n\nexport const {setChannelInfo} = appSlice.actions;\nexport const selectChannelId= (state) => state.app.channelId;\nexport const selectChannelName= (state) => state.app.channelName;\nexport default appSlice.reducer;\n","import firebase from \"firebase\"\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAJUrJi-pNXXBdbkqxMWg4NyQJ7iQ8gReY\",\n    authDomain: \"chatroom-c827e.firebaseapp.com\",\n    projectId: \"chatroom-c827e\",\n    storageBucket: \"chatroom-c827e.appspot.com\",\n    messagingSenderId: \"6991606734\",\n    appId: \"1:6991606734:web:360cbcaebc86c6767bf19f\",\n    measurementId: \"G-FPSX9BXJ3K\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db= firebaseApp.firestore()\n  const auth =firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export {auth,provider};\n  export default db;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user:null,\n  },\n  reducers: {\n    login: (state,action) => {\n     state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user =null;\n    }\n  },\n});\n\nexport const { login,logout } = userSlice.actions;\nexport const selectUser= (state) => state.user.user;\nexport default userSlice.reducer;\n","import React from 'react'\nimport {useDispatch} from \"react-redux\";\nimport {setChannelInfo} from \"./features/appSlice\";\nimport \"./SidebarChannel.css\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport db from \"./firebase\"\nimport {useSelector} from \"react-redux\"\nimport { selectUser} from './features/userSlice';\n\nfunction SidebarChannel({id,channelName,admin}) {\n    const userID = useSelector(selectUser);\n    const dispatch = useDispatch();\n    const removeChannel= () =>{\n        db.collection('channels').doc(id).delete();\n    }\n    return (\n        <div className=\"sidebarChannel\" \n        onClick={() =>\n         dispatch(\n             setChannelInfo({\n                channelId:id,\n                channelName: channelName,\n            })\n         )\n    }\n    >\n            <h4><span className='sidebarChannel__hash'>#</span>{channelName}{(admin===userID.displayName) ?<CloseIcon  onClick={removeChannel} className=\"hide__btn_c\"/>:<></>}</h4>\n        </div>\n    );\n}\nexport default SidebarChannel\n","import React,{useState,useEffect} from 'react'\nimport \"./Sidebar.css\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport SidebarChannel from \"./SidebarChannel.js\"\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\nimport SignalCellularOffIcon from '@material-ui/icons/SignalCellularOff';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport CallIcon from '@material-ui/icons/Call';\nimport {Avatar } from '@material-ui/core';\nimport MicIcon from '@material-ui/icons/Mic';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport {useSelector} from \"react-redux\"\nimport {selectUser} from \"./features/userSlice\";\nimport db,{ auth } from './firebase';\nimport ArrowBackIosIcon from '@material-ui/icons/KeyboardArrowRight';\n\n\nfunction Sidebar() {\n    const user=useSelector(selectUser)\n    const [channels,setChannels] = useState([]);\n    const [toggle,setToggle] = useState(false);\n    const [voice,voiceToggle]= useState(false);\n    const toggleChannelsList=()=>{\n        if(!toggle){\n            document.getElementsByClassName(\"sidebar__channelsList\")[0].style.visibility=\"hidden\";\n            setToggle(true);\n            }else{\n            document.getElementsByClassName(\"sidebar__channelsList\")[0].style.visibility=\"visible\";\n            setToggle(false);}\n    }\n    useEffect(() =>{\n        db.collection('channels')\n        .onSnapshot(snapshot => (setChannels(snapshot.docs.map(doc=>(\n        {\n            id:doc.id,\n            channel:doc.data(),\n        }\n        )))))\n    })\n    const handleAddChannel=()=>{\n        const channelName = prompt(\"Enter a new channel name\");\n        if(channelName) {\n            db.collection(\"channels\").add({\n                channelName: channelName,\n                userAdmin: user.displayName,\n            })\n        }\n    }\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__top\">\n                <h3>Chat Room</h3>\n                <ExpandMoreIcon />\n            </div>\n\n        <div className=\"sidebar__channels\">\n            <div className=\"sidebar__channelsHeader\">\n                <div className=\"sidebar__header\" onClick={toggleChannelsList}>\n                    {!toggle?<ExpandMoreIcon/>: <ArrowBackIosIcon/> }\n                    <h4>Text Channels</h4>\n                    <AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\" />\n                </div>\n            </div>\n                <div className=\"sidebar__channelsList\">\n                    {channels.map(({id,channel}) =>\n                    <SidebarChannel key={id} id={id} channelName={channel.channelName} admin={channel.userAdmin}/>\n                    )}\n                </div>\n            </div>\n            <div onClick={()=> voice?voiceToggle(false):voiceToggle(true)} className=\"sidebar__voice\">\n                {voice?<SignalCellularOffIcon  \n                    className='sidebar__voiceIcon2'\n                    fontSize=\"large\"/>:\n                <SignalCellularAltIcon \n                    className='sidebar__voiceIcon'\n                    fontSize=\"large\"/>}\n                <div className={voice?'sidebar__voiceInfo2':'sidebar__voiceInfo'}>\n                    <h3 >Voice {voice?\"Disconnected\":\"Connected\"}</h3>\n                    <p>Stream</p>\n                </div>\n                <div className=\"sidebar__voiceIcons\">\n                    <InfoOutlinedIcon />\n                    <CallIcon />\n                </div>\n            </div>\n            <div className=\"sidebar__profile\">\n                <Avatar src={user.photo} onClick={()=>auth.signOut()}/>\n                <div className=\"sidebar__profileInfo\">\n                    <h3>@{user.displayName}</h3>\n                    <p>#{user.uid.substring(0,5)}</p>\n                </div>\n                <div className=\"sidebar__profileIcons\">\n                    <MicIcon />\n                    <HeadsetIcon />\n                    <SettingsIcon />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Sidebar\n","import React from 'react'\nimport './ChatHeader.css'\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded';\n\n\nfunction ChatHeader({channelName}) {\n    return (\n        <div className='chatHeader'>\n            <div className=\"chatHeader__left\">\n                <h3>\n                    <span className=\"chatHeader__hash\">#</span>\n                    {channelName}\n                </h3>\n            </div>\n            <div className=\"chatHeader__right\">\n                <NotificationsIcon />\n                <EditLocationIcon />\n                <PeopleAltRoundedIcon />\n                <div className=\"chatHeader__search\">\n                    <input placeholder=\"Search\" />\n                    <SearchRoundedIcon />\n                </div>\n                <SendRoundedIcon />\n                <HelpRoundedIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default ChatHeader\n","import React from 'react'\nimport {Avatar} from \"@material-ui/core\"\nimport './Message.css'\nimport CloseIcon from '@material-ui/icons/Close';\nimport db from \"./firebase\"\nimport {useSelector} from \"react-redux\"\nimport { selectUser} from './features/userSlice';\n\nfunction Message({key_id,channel_id,timestamp,user,message,img}) {\n    const userID = useSelector(selectUser);\n    const removeMessage= () =>{\n        db.collection('channels').doc(channel_id).collection('messages').doc(key_id).delete();\n    }\n    return (\n        <div className=\"message\">\n            \n            <Avatar src={user.photo}/>\n            <div className=\"message__info\">\n                <h4> {user.displayName}\n                    <span className='message__timestamp'>{new Date(timestamp?.toDate()).toUTCString()}</span>\n                </h4>\n                {(img)?<img alt=\"\" src={message}/>:<p>{message}</p>}\n            </div>\n            {(user.displayName===userID.displayName) ?<CloseIcon  onClick={removeMessage} className=\"hide__btn\"/>:<></>}\n        </div>\n    )\n}\n\nexport default Message\n","import React, { useState, useEffect } from 'react'\nimport './Chat.css'\nimport ChatHeader from './ChatHeader.js'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport ImageIcon from '@material-ui/icons/Image';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from \"./Message.js\"\nimport {useSelector} from \"react-redux\"\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport { selectUser} from './features/userSlice';\nimport db from \"./firebase\"\nimport firebase from \"firebase\"\nimport ReactGiphySearchbox from \"react-giphy-searchbox\";\n\nfunction Chat() {\n    var messagesEnd = React.createRef()\n    const user = useSelector(selectUser);\n    const channelId = useSelector(selectChannelId);\n    const channelName = useSelector(selectChannelName);\n    const [input,setInput]=useState(\"\");\n    const [imgtoggle,setImgtoggle]=useState(false);\n    const [giftoggle,setgiftoggle]=useState(false);\n    const [messages,setMessages]=useState([]);\n    const scrollToBottom = () => {\n        messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n    useEffect(() => {\n        if(channelId){\n        db.collection('channels').doc(channelId).collection('messages')\n        .orderBy('timestamp','asc').onSnapshot((snapshot) =>\n            setMessages(snapshot.docs.map((doc)=>({id:doc.id,data:doc.data()}))));\n        }\n        scrollToBottom();\n    }, [channelId])\n    const sendMessage = (e) => {\n        e.preventDefault();\n        db.collection('channels').doc(channelId).collection('messages').add({\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n            message:input,\n            user:user,\n            img:imgtoggle,\n        })\n        setInput(\"\");\n        scrollToBottom();\n    }\n    const imgHandle=()=>{\n        (imgtoggle)?setImgtoggle(false):setImgtoggle(true);\n    }\n    const handleGif=(e)=>{\n        channelId?db.collection('channels').doc(channelId).collection('messages').add({\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n            message:e.images.fixed_height.url,\n            user:user,\n            img:true,\n        }):<></>;\n        setgiftoggle(false);\n    }\n    \n    return (\n        <div className=\"chat\" >\n            <ChatHeader channelName={channelName}/>\n            <div className=\"chat__messages\" onClick={()=>setgiftoggle(false)}>\n           \n                {messages.map((message,i)=>\n                 <Message \n                    key={message.id}\n                    key_id={message.id}\n                    channel_id={channelId}\n                    timestamp={message.data.timestamp}\n                    message={message.data.message}\n                    user={message.data.user}\n                    img={message.data.img}\n                    lm={(parseInt(messages.length)-1)===i?true:false}\n                    messagesEnd={messagesEnd}\n                />)}\n              <div style={{ float:\"left\", clear: \"both\",padding: \"40px\" }}\n             ref={(el) => { messagesEnd = el; }}>\n             </div>\n            </div>\n            {giftoggle? <div className=\"gify__inp\">\n                <ReactGiphySearchbox\n                    apiKey=\"9Ixlv3DWC1biJRI57RanyL7RTbfzz0o7\"\n                    onSelect={(item)=>handleGif(item)}\n                    masonryConfig={[\n                    { columns: 2, imageWidth: 110, gutter: 5 },\n                    { mq: \"700px\", columns: 3, imageWidth: 120, gutter: 5 }\n                    ]}\n                />\n            </div>:<></>}\n            <div className=\"chat__input\">\n            {(imgtoggle)?<ImageIcon onClick={imgHandle} className=\"addIcon\" fontSize=\"large\"/>:<AddCircleIcon onClick={imgHandle} fontSize=\"large\" className=\"addIcon\"/>}\n                <form>\n                    <input value={input} disabled={!channelId} onChange={(e) => setInput(e.target.value)} placeholder={(imgtoggle)? 'Image url '+ channelName :  'Message '+ channelName }/>\n                    <button className='chat__inputButton' onClick={sendMessage} type='submit'>Send Message</button>\n                </form>\n\n                <div className=\"chat__inputIcons\">\n                    <CardGiftcardIcon fontSize=\"large\" />\n                    <GifIcon onClick={()=> giftoggle?setgiftoggle(false):setgiftoggle(true)} cursor=\"pointer\" fontSize=\"large\" />\n                    <EmojiEmotionsIcon fontSize=\"large\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","import React from 'react'\nimport {Button} from \"@material-ui/core\"\nimport \"./Login.css\"\nimport {auth,provider} from \"./firebase.js\"\nfunction Login() {\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n        .catch((error)=>alert(error.message));\n    };\n    return (\n        <div className=\"login\">\n            <div className=\"login__logo\">\n\n            </div>\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSmHOOgwFIeEeNbZePimffFCNPIhpmGAOGT4w&usqp=CAU\" alt=\"\" />\n            <Button onClick={signIn}>Sign In</Button>\n        </div>\n    );\n}\nexport default Login\n","import React,{useEffect} from 'react';\nimport {useSelector,useDispatch} from \"react-redux\"\nimport Sidebar from \"./Sidebar.js\"\nimport Chat from './Chat.js'\nimport Login from \"./Login.js\"\nimport './App.css';\nimport { auth } from './firebase.js';\nimport {selectUser,login,logout} from \"./features/userSlice\"\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser)=> {\n      if(authUser){\n          dispatch(\n            login({\n            uid: authUser.uid,\n            photo: authUser.photoURL,\n            email: authUser.email,\n            displayName:authUser.displayName,\n          }));\n      }else{\n        dispatch(\n          logout());\n      }\n    })\n  }, [dispatch])\n  return (\n    <div className=\"app\">\n      {user ? (\n        <>\n          <Sidebar />\n          <Chat />\n        </>\n      ):(\n          <Login />\n      )}\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}